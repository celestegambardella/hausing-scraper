name: Update Hausing Scraper

on:
#  schedule:
#    - cron: '0 * * * *'  # Run hourly
#  workflow_dispatch:  # Allow manual triggering
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  update:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout scraper repo
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12.6'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4

    - name: Run scraper script
      run: |
        python src/scraper.py

    - name: Checkout GitHub Pages repo
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PAT_TOKEN }}
        repository: celestegambardella/celestegambardella.github.io
        ref: dev  # Checkout the dev branch
        path: dist  # This checks out the GitHub Pages repo to the "work" directory

    - name: List output directory
      run: |
        ls -la src/output/

    - name: Copy markdown to GitHub Pages repo
      run: |
        cp src/output/hausing-scraper.md dist/src/content/work/hausing-scrapper.md

    - name: Commit changes to dev branch
      run: |
        cd dist  # Change to the dist directory
        git config --global user.email "celestegambardella.se@gmail.com"
        git config --global user.name "celestegambardella"
        current_time=$(date +"%Y-%m-%d %H:%M:%S")
        git add src/content/work/hausing-scrapper.md
        git commit -m "Update Hausing Scraper results at $current_time"
        git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/celestegambardella/celestegambardella.github.io.git dev

    - name: Fetch prod branch
      run: |
        cd dist
        git fetch origin prod:prod  # Ensure the prod branch is fetched locally

    - name: Create Pull Request from dev to prod
      run: |
        cd dist
        current_time=$(date +"%Y-%m-%d %H:%M:%S")
        gh pr create --base prod --head dev --title "Automated PR: Update Hausing Scraper ($current_time)" --body "Automated update of Hausing Scraper results" --label "housing pr"
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN }}

    - name: Auto-merge PR with label 'housing mr'
      run: |
        cd dist
        # Find the PR with the label "housing mr"
        pr_number=$(gh pr list --base prod --label "housing mr" --json number --jq '.[0].number')

        # Check if the PR exists, then merge it
        if [ -n "$pr_number" ]; then
          gh pr merge $pr_number --squash --admin
          echo "PR #$pr_number merged successfully."
        else
          echo "No PR found with label 'housing mr'."
        fi
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN }}
